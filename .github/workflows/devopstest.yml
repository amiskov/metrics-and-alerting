name: autotests

on:
  pull_request:
  push:
    branches:
      - inc7

jobs:

  devopstest:
    runs-on: ubuntu-latest
    container: golang:1.18

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: praktikum
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download autotests binaries
        uses: robinraju/release-downloader@v1.2
        with:
          repository: Yandex-Practicum/go-autotests-bin
          latest: true
          fileName: "*"
          out-file-path: .tools

      - name: Setup autotest binary
        run: |
          chmod -R +x $GITHUB_WORKSPACE/.tools
          mv $GITHUB_WORKSPACE/.tools/devopstest /usr/local/bin/devopstest
          mv $GITHUB_WORKSPACE/.tools/random /usr/local/bin/random

      - name: Build agent binary
        run: |
          cd cmd/agent
          go build -o agent

# Соглашение:
#   Во всех заданиях, нужно обрабатывать все пограничные случаи и негатив-кейсы.
#   По ходу продвижения по инкрементам, тесты становятся строже.
#   Темплейты могут обновляться, добавляя все более строгие проверки.
# VII. Задание к седьмому инкременту.
# Доработать код, что бы он умел принимать аргументы с использованием флагов.
# * Аргументы Сервера
#     ADDRESS, через флаг "-a=<ЗНАЧЕНИЕ>"
#     RESTORE, через флаг "-r=<ЗНАЧЕНИЕ>"
#     STORE_INTERVAL, через флаг "-i=<ЗНАЧЕНИЕ>"
#     STORE_FILE, через флаг "-f=<ЗНАЧЕНИЕ>"
# * Аргументы Агента
#    ADDRESS, через флаг: "-a=<ЗНАЧЕНИЕ>"
#    REPORT_INTERVAL, через флаг: "-r=<ЗНАЧЕНИЕ>"
#    POLL_INTERVAL, через флаг: "-p=<ЗНАЧЕНИЕ>"
# Во всех случаях иметь значения по умолчанию и реализовать приоритет значений полученных через ENV, перед значениями задаваемые посредством флагов.

      - name: "Code increment #7"
        if: always()
        run: |
          SERVER_PORT=$(random unused-port)
          ADDRESS="localhost:${SERVER_PORT}"
          TEMP_FILE=$(random tempfile)
          devopstest -test.v -test.run=^TestIteration7$ \
            -source-path=. \
            -agent-binary-path=cmd/agent/agent \
            -binary-path=cmd/server/server \
            -server-port=$SERVER_PORT \
            -database-dsn='postgres://postgres:postgres@postgres:5432/praktikum?sslmode=disable' \
            -file-storage-path=$TEMP_FILE

